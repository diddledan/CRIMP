Welcome to CRIMP

Configuration is all done in the cgi-bin/crimp.ini file when using the
perl version of CRIMP, but we are upgrading to PHP, so the configuration
goes in public_html/_crimp/config.xml.
Configuration examples are in *.example files

--------------
PRE-REQUISITES
--------------
You need a php enabled host with the following PEAR modules installed:
   - HTTP
   - Config
   - XML_Parser
   - XML_Util

---------
TEMPLATES
---------
A template file is essentially a standard html file (the kind of file that
you view with your internet browser) with a special 'tag' that is replaced
with the output from the CRIMP engine. This enables you to create a
customised look and feel for your entire website with just one file. All
you need to do, is create your desired layout in a webpage editor, then
find the spot where you want CRIMP's content to appear, and select "insert
html" or "insert custom tag" (something like that) from the menu. When
prompted, enter "<!--PAGE_CONTENT-->" without the quotes, save the file
and upload to your webspace.

The <template></template> tag looks for the file you specify in the _crimp
directory, so if you put your template in _crimp/templates, you would
specify in your crimp.xml file:
    ...
    <template>./templates/yourtemplate.html</template>
    ...


-----------------
PHP MODULES (new)
-----------------

breadCrumbs
Designed to add a backwards navigation system so that users know where
they are in relation to the homepage, this module can be configured to
output breadcrumbs at either the top or bottom (or both) of the page.

contentDirectory
This module is configured with the path to the directory which contains
the content that you want to be visible within the section. The default
is ./docs. Paths must either be absolute or relative to the _crimp
dir. The module will automatically use a file by the name of index.html
for any directories (eg. request for / will result in the page at
location ../content/index.html, and a request for /wibble will use
../content/wibble/index.html if wibble is a directory, or just the file
by the name wibble.html if not.).


------------------
PERL MODULES (old)
------------------

ContentDatabase
This module must be configured with a database on an accessible server.
You can use any database that perl supports via the DBI module. The most
common database you'll use is mysql. A ContentDatabase provided section
must have certain options in the crimp.ini. The database must have a
'path' field of a textual type, a 'title' field which contains the page's
title as it should appear in the <title></title> tags (minus the site
name, as this is added automatically) and a 'content' field of a textual
type that can hold all of your page's data. The 'path' field will contain
the relative path (minus any preceeding slashes or dots, eg ./) of the
page you want to display, or 'root' for the base file. The 'root' page
will display (for our example configuration below) for either /db, /db/
or /db/root. The 'content' field must ocntain either pure (x)html or
pure perl code with "#PERL" on the first line with no spaces beforehand.
you cannot mix and match (x)html and perl within the same section. You
CAN, however, use (x)html on one page, and perl code on another.


---
FAQ
---

Q. the perl code in my database is printed out as is, instead of being
interpreted by CRIMP's perl-based ContentDatabase plugin.

A. make sure that the first line of your page(s) reads "#PERL" with nothing
before it (and nothing else on the same line as it will be interpreted as
a perl comment).
